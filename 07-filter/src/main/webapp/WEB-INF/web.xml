<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
  <!--
    从 Shiro 1.2 开始引入了 Environment/WebEnvironment 的概念，
    即由它们的实现提供相应的 SecurityManager 及其相应的依赖。
    ShiroFilter 会自动找到 Environment 然后获取相应的依赖。
    -->
  <listener>
    <listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>
  </listener>
  <!--
    通过 EnvironmentLoaderListener 来创建相应的 WebEnvironment，
    并自动绑定到 ServletContext，默认使用 IniWebEnvironment 实现。
    可以通过如下配置修改默认实现及其加载的配置文件位置：
  -->
  <context-param>
    <param-name>shiroEnvironmentClass</param-name>
    <!--    <param-value>org.apache.shiro.web.env.IniWebEnvironment</param-value>-->
    <!--    使用自定义的环境-->
    <param-value>org.shiloh.shiro.env.MyIniWebEnvironment</param-value>
  </context-param>
  <!--
    shiroConfigLocations 默认是 “/WEB-INF/shiro.ini”，
    IniWebEnvironment 默认是先从 / WEB-INF/shiro.ini 加载，如果没有就默认加载 classpath:shiro.ini。
  -->
  <context-param>
    <param-name>shiroConfigLocations</param-name>
    <param-value>classpath:shiro.ini</param-value>
    <!--    基于 Basic 的拦截器身份认证-->
    <!--    <param-value>classpath:shiro-basic-filter-login.ini</param-value>-->
    <!--    基于表单的拦截器身份验证-->
    <!--    <param-value>classpath:shiro-form-filter-login.ini</param-value>-->
  </context-param>
  <!--  与Spring集成的配置-->
  <!--  <filter>-->
  <!--
    DelegatingFilterProxy 作用是自动到 spring 容器查找名字为 shiroFilter（filter-name）的 bean
     并把所有 Filter 的操作委托给它。
  -->
  <!--    <filter-name>shiroFilter</filter-name>-->
  <!--    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
  <!--    <init-param>-->
  <!--      <param-name>targetFilterLifecycle</param-name>-->
  <!--      <param-value>true</param-value>-->
  <!--    </init-param>-->
  <!--  </filter>-->
  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>