# 基于表单的拦截器身份验证
[main]
# authc 是 org.apache.shiro.web.filter.authc.FormAuthenticationFilter 类型的实例，
# 其用于实现基于表单的身份验证
# 登录地址
authc.loginUrl = /form-filter-login
# 登录表单中，用户名输入框的 name 属性值
authc.usernameParam = username
# 登录表单中，用户名输入框的 password 属性值
authc.passwordParam = password
# 登录成功默认的跳转地址，如果有上一个地址会自动重定向带该地址
authc.successUrl = /
# 登录失败错误信息存储的 key 名称，可以通过 request.getAttribute(key) 获取登录失败的错误信息
authc.failureKeyAttribute = shiroLoginFailure
# 如果授权失败时重定向到的地址
perms.unauthorizedUrl = /unauthorized
roles.unauthorizedUrl = /unauthorized

[users]
shiloh = 123,admin
tom = 123

[roles]
admin = user:*,menu:*

[urls]
# roles 是 org.apache.shiro.web.filter.authz.RolesAuthorizationFilter 类型的实例
# 通过参数指定访问时需要的角色，如：[admin]，如果有多个使用逗号","分隔，
# 且验证时使用的是 hasAllRole 验证，即 & 的关系。
/role = authc,roles[admin]
/static/** = anon
/form-filter-login = authc
# Perms 是 org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter 类型的实例，
# 和 roles 类似，只是验证权限字符串
/permissions = authc,perms["user:create"]