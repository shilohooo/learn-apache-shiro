# 配置规则
# 对象名 = 全限定类型，相当于调用 public 无参构造创建对象
# 对象名.属性名 = 值，相当于调用 setter 方法设置属性值
# 对象名.属性名 = $对象引用，相当于调用 setter 方法设置对象引用
[main]
# main - 配置 securityManager 根对象及其依赖对象
#authenticator
authenticator = org.apache.shiro.authc.pam.ModularRealmAuthenticator
authenticationStrategy = org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
authenticator.authenticationStrategy = $authenticationStrategy
securityManager.authenticator = $authenticator

#authorizer
authorizer = org.apache.shiro.authz.ModularRealmAuthorizer
permissionResolver = org.apache.shiro.authz.permission.WildcardPermissionResolver
authorizer.permissionResolver = $permissionResolver
securityManager.authorizer = $authorizer

#realm
dataSource = com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName = com.mysql.cj.jdbc.Driver
dataSource.url = jdbc:mysql://127.0.0.1:13306/learn_shiro?useUnicode=true&useSSL=false&characterEncoding=UTF-8
dataSource.username = root
dataSource.password = 123456
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true
securityManager.realms = $jdbcRealm

[users]
# users - 配置用户名 / 密码及其角色
# 格式：username=password,role1,role2
# 角色部分可以省略

[roles]
# roles - 配置角色及权限之间的关系
# 格式：role=permission1,permission2

[urls]
# urls - 配置 url 及相应的拦截器之间的关系
# 格式：url=拦截器[参数],拦截器[参数]
# 举例：/admin/** = authc, roles[admin], perms["permission1"]